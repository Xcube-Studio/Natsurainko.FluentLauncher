<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:behaviors="using:Natsurainko.FluentLauncher.XamlHelpers.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:Natsurainko.FluentLauncher.XamlHelpers.Converters"
    xmlns:i="using:Microsoft.Xaml.Interactivity">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <StaticResource x:Key="SettingsCardBackground" ResourceKey="CardBackgroundFillColorDefaultBrush" />
            <StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
            <StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="ControlFillColorTertiaryBrush" />
            <StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />

            <StaticResource x:Key="SettingsCardForeground" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />

            <StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="CardStrokeColorDefaultBrush" />
            <StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="ControlElevationBorderBrush" />
            <StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
            <StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="ControlStrokeColorDefaultBrush" />
        </ResourceDictionary>

        <ResourceDictionary x:Key="Light">
            <StaticResource x:Key="SettingsCardBackground" ResourceKey="CardBackgroundFillColorDefaultBrush" />
            <StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
            <StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="ControlFillColorTertiaryBrush" />
            <StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />

            <StaticResource x:Key="SettingsCardForeground" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />

            <StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="CardStrokeColorDefaultBrush" />
            <StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="ControlElevationBorderBrush" />
            <StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
            <StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="ControlStrokeColorDefaultBrush" />
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <StaticResource x:Key="SettingsCardBackground" ResourceKey="SystemColorButtonFaceColorBrush" />
            <StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />

            <StaticResource x:Key="SettingsCardForeground" ResourceKey="SystemColorButtonTextColorBrush" />
            <StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />

            <StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="SystemColorButtonTextColorBrush" />
            <StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="SystemControlDisabledTransparentBrush" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <converters:TaskStateConverter x:Key="TaskStateConverter" />

    <Style x:Key="FixedExpanderStyle" TargetType="Expander">
        <!--
            We won't make this control tab stoppable, since the tab focus should go
            to the toggle button. For this logic, several things were made:
            1. Expander::OnApplyTemplate - We set the toggle button's events source to the expander's. This will announce expander properties
            (expand/collapse) changes to narrator. Without this, narrator would announce the toggle button's "on/off" logic
            instead of the "expand/collapse" logic.
            2. ExpanderAutomationPeer::GetChildrenCore - Because of 1., we need to override GetChildrenCore to NOT include the toggle button.
            If we don't do this, we create a weird dependency cycle between the toggle button and the expander.
            3. ExpanderAutomationPeer::GetPeerFromPointCore Finally, when using narrator with a touch screen, this was overriden as well, to
            focus the toggle button programmatically to sync the narrator focus with the keyboard focus.
            Without this override, the narrator user that focuses the expander on a touch screen will see that pressing "Tab"
            doesn't work how they would expect.
        -->
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{ThemeResource ExpanderContentBackground}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ExpanderContentDownBorderThickness}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ExpanderContentBorderBrush}" />
        <Setter Property="Padding" Value="{StaticResource ExpanderContentPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="Row0" Height="Auto" />
                            <RowDefinition x:Name="Row1" Height="*" />
                        </Grid.RowDefinitions>
                        <ToggleButton
                            x:Name="ExpanderHeader"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="0"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}"
                            VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}"
                            AutomationProperties.AutomationId="ExpanderToggleButton"
                            Background="{ThemeResource ExpanderHeaderBackground}"
                            BackgroundSizing="{TemplateBinding BackgroundSizing}"
                            BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
                            BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            IsEnabled="{TemplateBinding IsEnabled}"
                            Style="{StaticResource FixedExpanderHeaderDownStyle}" />
                        <!--  The clip is a composition clip applied in code  -->
                        <Border x:Name="ExpanderContentClip" Grid.Row="1">
                            <Border
                                x:Name="ExpanderContent"
                                MinHeight="{TemplateBinding MinHeight}"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{StaticResource ExpanderContentDownBorderThickness}"
                                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
                                Visibility="Collapsed">
                                <ContentPresenter
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                                <Border.RenderTransform>
                                    <CompositeTransform />
                                </Border.RenderTransform>
                            </Border>
                        </Border>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandStates">
                                <VisualState x:Name="ExpandUp">
                                    <VisualState.Setters>
                                        <Setter Target="ExpanderHeader.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />

                                    </VisualState.Setters>
                                    <VisualState.Storyboard>

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="0.0, 0.0, 0.0, 1.0"
                                                    KeyTime="0:0:0.333"
                                                    Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="CollapseDown">
                                    <VisualState.Storyboard>

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="1.0, 1.0, 0.0, 1.0"
                                                    KeyTime="0:0:0.167"
                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandDown">
                                    <VisualState.Setters>
                                        <Setter Target="ExpanderHeader.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />

                                    </VisualState.Setters>
                                    <VisualState.Storyboard>

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="0.0, 0.0, 0.0, 1.0"
                                                    KeyTime="0:0:0.333"
                                                    Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="CollapseUp">
                                    <VisualState.Storyboard>

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.167" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="1.0, 1.0, 0.0, 1.0"
                                                    KeyTime="0:0:0.167"
                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualState x:Name="Down" />
                                <VisualState x:Name="Up">
                                    <VisualState.Setters>
                                        <Setter Target="ExpanderHeader.Style" Value="{StaticResource ExpanderHeaderUpStyle}" />
                                        <Setter Target="ExpanderContent.BorderThickness" Value="{StaticResource ExpanderContentUpBorderThickness}" />
                                        <Setter Target="ExpanderContent.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <Setter Target="ExpanderHeader.(Grid.Row)" Value="1" />
                                        <Setter Target="ExpanderContentClip.(Grid.Row)" Value="0" />
                                        <Setter Target="Row0.Height" Value="*" />
                                        <Setter Target="Row1.Height" Value="Auto" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FixedExpanderHeaderDownStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="{StaticResource ExpanderHeaderPadding}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        x:Name="ToggleButtonGrid"
                        Width="{TemplateBinding Width}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BackgroundSizing="{TemplateBinding BackgroundSizing}"
                        BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Grid.ColumnSpan="2"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Foreground="{TemplateBinding Foreground}" />
                        <Border
                            x:Name="ExpandCollapseChevronBorder"
                            Grid.Column="1"
                            Width="{ThemeResource ExpanderChevronButtonSize}"
                            Height="{ThemeResource ExpanderChevronButtonSize}"
                            Margin="{ThemeResource ExpanderChevronMargin}"
                            Background="{ThemeResource ExpanderChevronBackground}"
                            BorderBrush="{ThemeResource ExpanderChevronBorderBrush}"
                            BorderThickness="{ThemeResource ExpanderChevronBorderThickness}"
                            CornerRadius="{ThemeResource ControlCornerRadius}">
                            <AnimatedIcon
                                xmlns:local="using:Microsoft.UI.Xaml.Controls"
                                x:Name="ExpandCollapseChevron"
                                Width="{StaticResource ExpanderChevronGlyphSize}"
                                Height="{StaticResource ExpanderChevronGlyphSize}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                local:AnimatedIcon.State="NormalOff"
                                AutomationProperties.AccessibilityView="Raw"
                                Foreground="{ThemeResource ExpanderChevronForeground}"
                                RenderTransformOrigin="0.5, 0.5">
                                <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                                <AnimatedIcon.FallbackIconSource>
                                    <FontIconSource
                                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                                        FontSize="12"
                                        Glyph="{StaticResource ExpanderChevronDownGlyph}"
                                        IsTextScaleFactorEnabled="False" />
                                </AnimatedIcon.FallbackIconSource>
                                <AnimatedIcon.RenderTransform />
                            </AnimatedIcon>
                        </Border>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="PointerOver">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderBorderPointerOverBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBorderPointerOverBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPointerOverBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PointerOverOff" />

                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderBorderPressedBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPressedForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBorderPressedBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPressedBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PressedOff" />

                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Checked">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="NormalOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderBorderPointerOverBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBorderPointerOverBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPointerOverBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PointerOverOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderBorderPressedBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPressedForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBorderPressedBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPressedBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PressedOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="NormalOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                                <VisualState x:Name="IndeterminatePointerOver" />
                                <VisualState x:Name="IndeterminatePressed" />
                                <VisualState x:Name="IndeterminateDisabled" />

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DownloadModTaskTemplate">
        <Border
            Background="{ThemeResource SettingsCardBackground}"
            BorderBrush="{ThemeResource SettingsCardBorderBrush}"
            BorderThickness="1"
            CornerRadius="4">
            <StackPanel>
                <Grid Padding="16">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="16" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <FontIcon Glyph="{Binding Icon, Mode=OneWay}" />

                    <StackPanel Grid.Column="2" Spacing="4">
                        <TextBlock Style="{ThemeResource BaseTextBlockStyle}">
                            <Run x:Uid="Tasks_DownloadPage_DownloadModTitle" Text="Download Mod:" />
                            <Run Text="{Binding Title, Mode=OneWay}" />
                        </TextBlock>
                        <Border Background="{ThemeResource ProgressBarBackgroundThemeBrush}" CornerRadius="1">
                            <ProgressBar
                                Background="Transparent"
                                IsIndeterminate="{Binding ProgressBarIsIndeterminate, Mode=OneWay}"
                                Maximum="1"
                                ShowError="{Binding IsFaulted}"
                                ShowPaused="{Binding IsCanceled}"
                                Value="{Binding Progress}" />
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{Binding TaskState, Converter={ThemeResource TaskStateConverter}}"
                                Visibility="{Binding IsCompleted, Converter={ThemeResource BoolToVisibilityConverter}}" />
                            <TextBlock
                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Visibility="{Binding IsCompleted, Converter={ThemeResource InvertedBoolToVisibilityConverter}}">
                                <Run Text="{Binding DownloadedBytes, Mode=OneWay}" />
                                <Run Text="/" />
                                <Run Text="{Binding TotalBytes, Mode=OneWay}" />
                            </TextBlock>
                            <TextBlock
                                Grid.Column="2"
                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{Binding TimeUsage, Mode=OneWay}" />
                        </Grid>
                    </StackPanel>

                    <Button
                        Grid.Column="3"
                        Margin="16,0,0,0"
                        Command="{Binding CancelCommand}"
                        IsEnabled="{Binding CanCancel, Mode=OneWay}"
                        Style="{ThemeResource DeleteButtonStyle}"
                        Visibility="{Binding IsCompleted, Converter={ThemeResource InvertedBoolToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal" Spacing="5">
                            <FontIcon
                                FontSize="13.5"
                                Foreground="White"
                                Glyph="&#xe71a;" />
                            <TextBlock
                                x:Uid="Buttons_Cancel"
                                Foreground="White"
                                Text="Cancel" />
                        </StackPanel>
                    </Button>

                    <CommandBar
                        Grid.Row="1"
                        Grid.Column="2"
                        Grid.ColumnSpan="2"
                        Margin="0,16,0,0"
                        HorizontalAlignment="Right"
                        DefaultLabelPosition="Right">
                        <AppBarButton
                            x:Uid="Tasks_DownloadPage_AB1"
                            Command="{Binding OpenFolderCommand}"
                            IsEnabled="{Binding Downloaded, Mode=OneWay}"
                            Label="Open in File Explorer">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xE838;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            x:Uid="Tasks_DownloadPage_AB2"
                            Command="{Binding CopyUrlCommand}"
                            Label="Copy Download Link">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xE8C8;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <CommandBar.SecondaryCommands>
                            <AppBarButton
                                x:Uid="Tasks_DownloadPage_AB3"
                                Command="{Binding RetryCommand}"
                                Icon="Refresh"
                                IsEnabled="{Binding IsCompleted, Mode=OneWay}"
                                Label="Retry Download">
                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="R" Modifiers="Control" />
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="Tasks_DownloadPage_AB4"
                                Command="{Binding RemoveCommand}"
                                Icon="Delete"
                                IsEnabled="{Binding IsCompleted, Mode=OneWay}"
                                Label="Remove Task">
                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="D" Modifiers="Control" />
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>
                        </CommandBar.SecondaryCommands>
                    </CommandBar>
                </Grid>

                <Expander
                    Padding="0"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Style="{ThemeResource FixedExpanderStyle}"
                    Visibility="{Binding IsFaulted, Mode=OneWay, Converter={ThemeResource BoolToVisibilityConverter}}">
                    <Expander.Header>
                        <Border
                            Background="{ThemeResource InfoBarErrorSeverityBackgroundBrush}"
                            BorderBrush="{ThemeResource InfoBarBorderBrush}"
                            BorderThickness="{ThemeResource InfoBarBorderThickness}"
                            CornerRadius="{ThemeResource ControlCornerRadius}">
                            <Grid
                                MinHeight="{ThemeResource InfoBarMinHeight}"
                                Padding="{StaticResource InfoBarContentRootPadding}"
                                CornerRadius="{ThemeResource ControlCornerRadius}">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="32" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <TextBlock
                                        Margin="{StaticResource InfoBarIconMargin}"
                                        VerticalAlignment="Top"
                                        AutomationProperties.AccessibilityView="Raw"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{StaticResource InfoBarIconFontSize}"
                                        Foreground="{ThemeResource InfoBarErrorSeverityIconBackground}"
                                        Text="{StaticResource InfoBarIconBackgroundGlyph}" />
                                    <TextBlock
                                        Margin="{StaticResource InfoBarIconMargin}"
                                        VerticalAlignment="Top"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{StaticResource InfoBarIconFontSize}"
                                        Foreground="{ThemeResource InfoBarErrorSeverityIconForeground}"
                                        Text="{StaticResource InfoBarErrorIconGlyph}" />
                                </Grid>
                                <InfoBarPanel
                                    Grid.Column="1"
                                    Margin="{StaticResource InfoBarPanelMargin}"
                                    HorizontalOrientationPadding="{StaticResource InfoBarPanelHorizontalOrientationPadding}"
                                    VerticalOrientationPadding="{StaticResource InfoBarPanelVerticalOrientationPadding}">
                                    <TextBlock
                                        FontSize="{StaticResource InfoBarTitleFontSize}"
                                        FontWeight="{StaticResource InfoBarTitleFontWeight}"
                                        Foreground="{ThemeResource InfoBarTitleForeground}"
                                        InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarTitleHorizontalOrientationMargin}"
                                        InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarTitleVerticalOrientationMargin}"
                                        Text="{Binding InfoBarTitle, Mode=OneWay}"
                                        TextWrapping="WrapWholeWords" />
                                    <TextBlock
                                        FontSize="{StaticResource InfoBarMessageFontSize}"
                                        FontWeight="{StaticResource InfoBarMessageFontWeight}"
                                        Foreground="{ThemeResource InfoBarMessageForeground}"
                                        InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarMessageHorizontalOrientationMargin}"
                                        InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarMessageVerticalOrientationMargin}"
                                        Text="{Binding ExceptionTitle, Mode=OneWay}"
                                        TextWrapping="WrapWholeWords" />
                                    <Button
                                        VerticalAlignment="Top"
                                        Command="{Binding CopyExceptionContentCommand}"
                                        InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarActionHorizontalOrientationMargin}"
                                        InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarActionVerticalOrientationMargin}">
                                        <StackPanel Orientation="Horizontal" Spacing="5">
                                            <FontIcon FontSize="14" Glyph="&#xf000;" />
                                            <TextBlock
                                                x:Uid="Buttons_CopyException"
                                                Text="Copy Exception"
                                                TextTrimming="CharacterEllipsis" />
                                        </StackPanel>
                                    </Button>
                                </InfoBarPanel>
                            </Grid>
                        </Border>

                    </Expander.Header>

                    <ScrollViewer MaxHeight="250">
                        <RichTextBlock Margin="16" HorizontalAlignment="Stretch">
                            <Paragraph>
                                <Run Text="{Binding ExceptionContent, Mode=OneWay}" />
                            </Paragraph>
                        </RichTextBlock>
                    </ScrollViewer>
                </Expander>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="InstallInstanceTaskTemplate">
        <Border
            Background="{ThemeResource SettingsCardBackground}"
            BorderBrush="{ThemeResource SettingsCardBorderBrush}"
            BorderThickness="1"
            CornerRadius="4">
            <StackPanel>
                <Grid Padding="16">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="16" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <FontIcon Glyph="{Binding Icon, Mode=OneWay}" />

                    <StackPanel Grid.Column="2" Spacing="4">
                        <TextBlock Style="{ThemeResource BaseTextBlockStyle}">
                            <Run x:Uid="Tasks_DownloadPage_InstallInstanceTitle" Text="Install Instance:" />
                            <Run Text="{Binding Title, Mode=OneWay}" />
                        </TextBlock>
                        <Border Background="{ThemeResource ProgressBarBackgroundThemeBrush}" CornerRadius="1">
                            <ProgressBar
                                Background="Transparent"
                                IsIndeterminate="{Binding ProgressBarIsIndeterminate, Mode=OneWay}"
                                Maximum="1"
                                ShowError="{Binding IsFaulted}"
                                ShowPaused="{Binding IsCanceled}"
                                Value="{Binding Progress}" />
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{Binding CurrentStage.TaskName, Mode=OneWay}"
                                Visibility="{Binding IsLaunching, Converter={ThemeResource BoolToVisibilityConverter}}" />
                            <TextBlock
                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{Binding TaskState, Converter={ThemeResource TaskStateConverter}}"
                                Visibility="{Binding IsLaunching, Converter={ThemeResource InvertedBoolToVisibilityConverter}}" />
                            <TextBlock
                                Grid.Column="2"
                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{Binding TimeUsage, Mode=OneWay}" />
                        </Grid>
                    </StackPanel>

                    <Button
                        Grid.Column="3"
                        Margin="16,0,0,0"
                        Command="{Binding CancelCommand}"
                        IsEnabled="{Binding CanCancel, Mode=OneWay}"
                        Style="{ThemeResource DeleteButtonStyle}"
                        Visibility="{Binding IsCompleted, Converter={ThemeResource InvertedBoolToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal" Spacing="5">
                            <FontIcon
                                FontSize="13.5"
                                Foreground="White"
                                Glyph="&#xe71a;" />
                            <TextBlock
                                x:Uid="Buttons_Cancel"
                                Foreground="White"
                                Text="Cancel" />
                        </StackPanel>
                    </Button>

                    <ItemsControl
                        Grid.Row="1"
                        Grid.Column="2"
                        Grid.ColumnSpan="2"
                        Margin="0,16,0,0"
                        ItemsSource="{Binding StageViewModels}"
                        Visibility="{Binding Installed, Mode=OneWay, Converter={ThemeResource InvertedBoolToVisibilityConverter}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,3.75">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                    <ProgressRing
                                        Width="16"
                                        Height="16"
                                        IsActive="{Binding IsRunning}" />
                                    <FontIcon
                                        FontSize="16"
                                        Glyph="{Binding FontIcon}"
                                        Visibility="{Binding IsRunning, Converter={ThemeResource InvertedBoolToVisibilityConverter}}" />
                                    <TextBlock Grid.Column="2" HorizontalAlignment="Right">
                                        <Run Text="{Binding FinishedTasks}" />
                                        <Run Text="/" />
                                        <Run Text="{Binding TotalTasks}" />
                                    </TextBlock>
                                    <TextBlock
                                        Grid.Column="4"
                                        Text="{Binding TaskName}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Spacing="2" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>

                    <CommandBar
                        Grid.Row="2"
                        Grid.Column="2"
                        Grid.ColumnSpan="2"
                        Margin="0,16,0,0"
                        HorizontalAlignment="Right"
                        DefaultLabelPosition="Right">
                        <AppBarButton
                            x:Uid="Tasks_DownloadPage_AB6"
                            Command="{Binding LaunchCommand}"
                            IsEnabled="{Binding Installed, Mode=OneWay}"
                            Label="Launch Instance">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xE945;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            x:Uid="Tasks_DownloadPage_AB7"
                            Command="{Binding OpenInstanceFolderCommand}"
                            IsEnabled="{Binding Installed, Mode=OneWay}"
                            Label="Open Instance Folder">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xe756;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <CommandBar.SecondaryCommands>
                            <AppBarButton
                                x:Uid="Tasks_DownloadPage_AB5"
                                Command="{Binding RetryCommand}"
                                Icon="Refresh"
                                IsEnabled="{Binding IsCompleted, Mode=OneWay}"
                                Label="Retry Install">
                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="R" Modifiers="Control" />
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="Tasks_DownloadPage_AB4"
                                Command="{Binding RemoveCommand}"
                                Icon="Delete"
                                IsEnabled="{Binding IsCompleted, Mode=OneWay}"
                                Label="Remove Task">
                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="D" Modifiers="Control" />
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>
                        </CommandBar.SecondaryCommands>
                    </CommandBar>
                </Grid>

                <Expander
                    Padding="0"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Style="{ThemeResource FixedExpanderStyle}"
                    Visibility="{Binding IsFaulted, Mode=OneWay, Converter={ThemeResource BoolToVisibilityConverter}}">
                    <Expander.Header>
                        <Border
                            Background="{ThemeResource InfoBarErrorSeverityBackgroundBrush}"
                            BorderBrush="{ThemeResource InfoBarBorderBrush}"
                            BorderThickness="{ThemeResource InfoBarBorderThickness}"
                            CornerRadius="{ThemeResource ControlCornerRadius}">
                            <Grid
                                MinHeight="{ThemeResource InfoBarMinHeight}"
                                Padding="{StaticResource InfoBarContentRootPadding}"
                                CornerRadius="{ThemeResource ControlCornerRadius}">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="32" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <TextBlock
                                        Margin="{StaticResource InfoBarIconMargin}"
                                        VerticalAlignment="Top"
                                        AutomationProperties.AccessibilityView="Raw"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{StaticResource InfoBarIconFontSize}"
                                        Foreground="{ThemeResource InfoBarErrorSeverityIconBackground}"
                                        Text="{StaticResource InfoBarIconBackgroundGlyph}" />
                                    <TextBlock
                                        Margin="{StaticResource InfoBarIconMargin}"
                                        VerticalAlignment="Top"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{StaticResource InfoBarIconFontSize}"
                                        Foreground="{ThemeResource InfoBarErrorSeverityIconForeground}"
                                        Text="{StaticResource InfoBarErrorIconGlyph}" />
                                </Grid>
                                <InfoBarPanel
                                    Grid.Column="1"
                                    Margin="{StaticResource InfoBarPanelMargin}"
                                    HorizontalOrientationPadding="{StaticResource InfoBarPanelHorizontalOrientationPadding}"
                                    VerticalOrientationPadding="{StaticResource InfoBarPanelVerticalOrientationPadding}">
                                    <TextBlock
                                        FontSize="{StaticResource InfoBarTitleFontSize}"
                                        FontWeight="{StaticResource InfoBarTitleFontWeight}"
                                        Foreground="{ThemeResource InfoBarTitleForeground}"
                                        InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarTitleHorizontalOrientationMargin}"
                                        InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarTitleVerticalOrientationMargin}"
                                        Text="{Binding InfoBarTitle, Mode=OneWay}"
                                        TextWrapping="WrapWholeWords" />
                                    <TextBlock
                                        FontSize="{StaticResource InfoBarMessageFontSize}"
                                        FontWeight="{StaticResource InfoBarMessageFontWeight}"
                                        Foreground="{ThemeResource InfoBarMessageForeground}"
                                        InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarMessageHorizontalOrientationMargin}"
                                        InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarMessageVerticalOrientationMargin}"
                                        Text="{Binding ExceptionTitle, Mode=OneWay}"
                                        TextWrapping="WrapWholeWords" />
                                    <Button
                                        VerticalAlignment="Top"
                                        Command="{Binding CopyExceptionContentCommand}"
                                        InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarActionHorizontalOrientationMargin}"
                                        InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarActionVerticalOrientationMargin}">
                                        <StackPanel Orientation="Horizontal" Spacing="5">
                                            <FontIcon FontSize="14" Glyph="&#xf000;" />
                                            <TextBlock
                                                x:Uid="Buttons_CopyException"
                                                Text="Copy Exception"
                                                TextTrimming="CharacterEllipsis" />
                                        </StackPanel>
                                    </Button>
                                </InfoBarPanel>
                            </Grid>
                        </Border>

                    </Expander.Header>

                    <ScrollViewer MaxHeight="250">
                        <RichTextBlock Margin="16" HorizontalAlignment="Stretch">
                            <Paragraph>
                                <Run Text="{Binding ExceptionContent, Mode=OneWay}" />
                            </Paragraph>
                        </RichTextBlock>
                    </ScrollViewer>
                </Expander>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="LaunchTaskTemplate">
        <Border
            Background="{ThemeResource SettingsCardBackground}"
            BorderBrush="{ThemeResource SettingsCardBorderBrush}"
            BorderThickness="1"
            CornerRadius="4">
            <StackPanel>
                <Grid Padding="16">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="16" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <FontIcon Glyph="{Binding Icon, Mode=OneWay}" />

                    <StackPanel Grid.Column="2" Spacing="4">
                        <TextBlock Style="{ThemeResource BaseTextBlockStyle}">
                            <Run x:Uid="Tasks_LaunchPage_LaunchTitle" Text="Launch Minecraft:" />
                            <Run Text="{Binding Title, Mode=OneWay}" />
                        </TextBlock>
                        <Border Background="{ThemeResource ProgressBarBackgroundThemeBrush}" CornerRadius="1">
                            <ProgressBar
                                Background="Transparent"
                                IsIndeterminate="{Binding ProgressBarIsIndeterminate, Mode=OneWay}"
                                Maximum="1"
                                ShowError="{Binding IsFaulted}"
                                ShowPaused="{Binding IsCanceled}"
                                Value="{Binding Progress}" />
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{Binding CurrentStage.TaskName, Mode=OneWay}"
                                Visibility="{Binding IsLaunching, Converter={ThemeResource BoolToVisibilityConverter}}" />
                            <TextBlock
                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{Binding TaskState, Converter={ThemeResource TaskStateConverter}}"
                                Visibility="{Binding IsLaunching, Converter={ThemeResource InvertedBoolToVisibilityConverter}}" />
                            <TextBlock
                                Grid.Column="2"
                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{Binding TimeUsage, Mode=OneWay}" />
                        </Grid>
                    </StackPanel>

                    <Button
                        Grid.Column="3"
                        Margin="16,0,0,0"
                        Command="{Binding CancelCommand}"
                        IsEnabled="{Binding CanCancel, Mode=OneWay}"
                        Style="{ThemeResource DeleteButtonStyle}"
                        Visibility="{Binding IsLaunching, Converter={ThemeResource BoolToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal" Spacing="5">
                            <FontIcon
                                FontSize="13.5"
                                Foreground="White"
                                Glyph="&#xe71a;" />
                            <TextBlock
                                x:Uid="Buttons_Cancel"
                                Foreground="White"
                                Text="Cancel" />
                        </StackPanel>
                    </Button>

                    <ItemsControl
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="0,16,0,0"
                        ItemsSource="{Binding StageViewModels}"
                        Visibility="{Binding ProcessLaunched, Converter={ThemeResource InvertedBoolToVisibilityConverter}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,3.75">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                    <ProgressRing
                                        Width="16"
                                        Height="16"
                                        IsActive="{Binding IsRunning}" />
                                    <FontIcon
                                        FontSize="16"
                                        Glyph="{Binding FontIcon}"
                                        Visibility="{Binding IsRunning, Converter={ThemeResource InvertedBoolToVisibilityConverter}}" />
                                    <TextBlock Grid.Column="2" HorizontalAlignment="Right">
                                        <Run Text="{Binding FinishedTasks}" />
                                        <Run Text="/" />
                                        <Run Text="{Binding TotalTasks}" />
                                    </TextBlock>
                                    <TextBlock
                                        Grid.Column="4"
                                        Text="{Binding TaskName}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Spacing="2" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>

                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="2"
                        Margin="0,16,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="4"
                        Visibility="{Binding ProcessLaunched, Converter={ThemeResource BoolToVisibilityConverter}}">
                        <Button Command="{Binding KillProcessCommand}" Style="{ThemeResource DeleteButtonStyle}">
                            <StackPanel Orientation="Horizontal" Spacing="5">
                                <FontIcon
                                    FontSize="13.5"
                                    Foreground="White"
                                    Glyph="&#xe71a;" />
                                <TextBlock
                                    x:Uid="Tasks_LaunchPage_B1"
                                    Foreground="White"
                                    Text="Kill Process" />
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <CommandBar
                        Grid.Row="2"
                        Grid.Column="2"
                        Grid.ColumnSpan="2"
                        Margin="0,16,0,0"
                        HorizontalAlignment="Right"
                        DefaultLabelPosition="Right">
                        <AppBarButton
                            x:Uid="Tasks_LaunchPage_AB1"
                            Command="{Binding ShowLoggerCommand}"
                            IsEnabled="{Binding ProcessLaunched, Mode=OneWay}"
                            Label="Open Logger">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xe756;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            x:Uid="Tasks_LaunchPage_AB2"
                            Command="{Binding CreateScriptCommand}"
                            IsEnabled="{Binding ProcessLaunched, Mode=OneWay}"
                            Label="Create Launch Script">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xe756;" />
                            </AppBarButton.Icon>
                            <i:Interaction.Behaviors>
                                <behaviors:AncestorBindingBehavior
                                    AncestorType="ScrollViewer"
                                    Binding="{Binding DataContext.DialogActivationService}"
                                    TargetPropertyName="CommandParameter" />
                            </i:Interaction.Behaviors>
                        </AppBarButton>
                        <CommandBar.SecondaryCommands>
                            <AppBarButton
                                x:Uid="Tasks_LaunchPage_AB3"
                                Command="{Binding RetryCommand}"
                                Icon="Refresh"
                                IsEnabled="{Binding IsCompleted, Mode=OneWay}"
                                Label="Retry Launch">
                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="R" Modifiers="Control" />
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="Tasks_LaunchPage_AB4"
                                Command="{Binding RemoveCommand}"
                                Icon="Delete"
                                IsEnabled="{Binding IsCompleted, Mode=OneWay}"
                                Label="Remove Task">
                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="D" Modifiers="Control" />
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="Tasks_LaunchPage_AB5"
                                Command="{Binding GoToInstanceSettingsCommand}"
                                Icon="Setting"
                                Label="Instance Settings">
                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="S" Modifiers="Control" />
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>
                        </CommandBar.SecondaryCommands>
                    </CommandBar>
                </Grid>

                <InfoBar
                    Title="Minecraft Crashed"
                    IsOpen="{Binding Crashed, Mode=OneWay}"
                    Message="Please check the Minecraft process log to identify any possible causes of the process crashing."
                    Severity="Warning"
                    Visibility="{Binding Crashed, Mode=OneWay, Converter={ThemeResource BoolToVisibilityConverter}}">
                    <InfoBar.ActionButton>
                        <Button>
                            <TextBlock x:Uid="Tasks_LaunchPage_B2" Text="Export Analysis Package" />
                        </Button>
                    </InfoBar.ActionButton>
                </InfoBar>

                <Expander
                    Padding="0"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Style="{ThemeResource FixedExpanderStyle}"
                    Visibility="{Binding IsFaulted, Mode=OneWay, Converter={ThemeResource BoolToVisibilityConverter}}">
                    <Expander.Header>
                        <Border
                            Background="{ThemeResource InfoBarErrorSeverityBackgroundBrush}"
                            BorderBrush="{ThemeResource InfoBarBorderBrush}"
                            BorderThickness="{ThemeResource InfoBarBorderThickness}"
                            CornerRadius="{ThemeResource ControlCornerRadius}">
                            <Grid
                                MinHeight="{ThemeResource InfoBarMinHeight}"
                                Padding="{StaticResource InfoBarContentRootPadding}"
                                CornerRadius="{ThemeResource ControlCornerRadius}">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="32" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <TextBlock
                                        Margin="{StaticResource InfoBarIconMargin}"
                                        VerticalAlignment="Top"
                                        AutomationProperties.AccessibilityView="Raw"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{StaticResource InfoBarIconFontSize}"
                                        Foreground="{ThemeResource InfoBarErrorSeverityIconBackground}"
                                        Text="{StaticResource InfoBarIconBackgroundGlyph}" />
                                    <TextBlock
                                        Margin="{StaticResource InfoBarIconMargin}"
                                        VerticalAlignment="Top"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{StaticResource InfoBarIconFontSize}"
                                        Foreground="{ThemeResource InfoBarErrorSeverityIconForeground}"
                                        Text="{StaticResource InfoBarErrorIconGlyph}" />
                                </Grid>
                                <InfoBarPanel
                                    Grid.Column="1"
                                    Margin="{StaticResource InfoBarPanelMargin}"
                                    HorizontalOrientationPadding="{StaticResource InfoBarPanelHorizontalOrientationPadding}"
                                    VerticalOrientationPadding="{StaticResource InfoBarPanelVerticalOrientationPadding}">
                                    <TextBlock
                                        FontSize="{StaticResource InfoBarTitleFontSize}"
                                        FontWeight="{StaticResource InfoBarTitleFontWeight}"
                                        Foreground="{ThemeResource InfoBarTitleForeground}"
                                        InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarTitleHorizontalOrientationMargin}"
                                        InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarTitleVerticalOrientationMargin}"
                                        Text="{Binding InfoBarTitle, Mode=OneWay}"
                                        TextWrapping="WrapWholeWords" />
                                    <TextBlock
                                        FontSize="{StaticResource InfoBarMessageFontSize}"
                                        FontWeight="{StaticResource InfoBarMessageFontWeight}"
                                        Foreground="{ThemeResource InfoBarMessageForeground}"
                                        InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarMessageHorizontalOrientationMargin}"
                                        InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarMessageVerticalOrientationMargin}"
                                        Text="{Binding ExceptionTitle, Mode=OneWay}"
                                        TextWrapping="WrapWholeWords" />
                                    <Button
                                        VerticalAlignment="Top"
                                        Command="{Binding CopyExceptionContentCommand}"
                                        InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarActionHorizontalOrientationMargin}"
                                        InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarActionVerticalOrientationMargin}">
                                        <StackPanel Orientation="Horizontal" Spacing="5">
                                            <FontIcon FontSize="14" Glyph="&#xf000;" />
                                            <TextBlock
                                                x:Uid="Buttons_CopyException"
                                                Text="Copy Exception"
                                                TextTrimming="CharacterEllipsis" />
                                        </StackPanel>
                                    </Button>
                                </InfoBarPanel>
                            </Grid>
                        </Border>

                    </Expander.Header>

                    <ScrollViewer MaxHeight="250">
                        <RichTextBlock Margin="16" HorizontalAlignment="Stretch">
                            <Paragraph>
                                <Run Text="{Binding ExceptionContent, Mode=OneWay}" />
                            </Paragraph>
                        </RichTextBlock>
                    </ScrollViewer>
                </Expander>
            </StackPanel>
        </Border>
    </DataTemplate>
</ResourceDictionary>
