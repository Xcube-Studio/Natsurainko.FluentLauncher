<Page
    x:Class="Natsurainko.FluentLauncher.Views.Settings.AppearancePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:actions="using:Natsurainko.FluentLauncher.XamlHelpers.Actions"
    xmlns:behaviors="using:Natsurainko.FluentLauncher.XamlHelpers.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:Natsurainko.FluentLauncher.XamlHelpers.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:settings="using:Natsurainko.FluentLauncher.ViewModels.Settings"
    xmlns:xh="using:Natsurainko.FluentLauncher.XamlHelpers"
    d:DataContext="{d:DesignInstance Type=settings:AppearanceViewModel}"
    mc:Ignorable="d">
    <Page.Resources>
        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Background" Value="{ThemeResource RadioButtonBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource RadioButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource RadioButtonBorderBrush}" />
            <Setter Property="Padding" Value="23,0,0,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="-7,-3,-7,-3" />
            <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid
                            x:Name="RootGrid"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid Height="32" VerticalAlignment="Center">
                                <Ellipse
                                    x:Name="OuterEllipse"
                                    Width="20"
                                    Height="20"
                                    Fill="{ThemeResource RadioButtonOuterEllipseFill}"
                                    Stroke="{ThemeResource RadioButtonOuterEllipseStroke}"
                                    StrokeThickness="{ThemeResource RadioButtonBorderThemeThickness}"
                                    UseLayoutRounding="False" />
                                <!--  A seperate element is added since the two orthogonal state groups that cannot touch the same property  -->
                                <Ellipse
                                    x:Name="CheckOuterEllipse"
                                    Width="20"
                                    Height="20"
                                    Fill="{ThemeResource RadioButtonOuterEllipseCheckedFill}"
                                    Opacity="0"
                                    Stroke="{ThemeResource RadioButtonOuterEllipseCheckedStroke}"
                                    StrokeThickness="{ThemeResource RadioButtonBorderThemeThickness}"
                                    UseLayoutRounding="False" />
                                <Ellipse
                                    x:Name="CheckGlyph"
                                    Width="{ThemeResource RadioButtonCheckGlyphSize}"
                                    Height="{ThemeResource RadioButtonCheckGlyphSize}"
                                    Fill="{ThemeResource RadioButtonCheckGlyphFill}"
                                    Opacity="0"
                                    Stroke="{ThemeResource RadioButtonCheckGlyphStroke}"
                                    UseLayoutRounding="False" />
                                <!--  A seperate element is added since the two orthogonal state groups that cannot touch the same property  -->
                                <Border
                                    x:Name="PressedCheckGlyph"
                                    Width="4"
                                    Height="4"
                                    Background="{ThemeResource RadioButtonCheckGlyphFill}"
                                    BackgroundSizing="OuterBorderEdge"
                                    BorderBrush="{ThemeResource RadioButtonCheckGlyphStroke}"
                                    CornerRadius="6"
                                    Opacity="0"
                                    UseLayoutRounding="False" />

                            </Grid>
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Foreground="{TemplateBinding Foreground}"
                                TextWrapping="Wrap" />

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseStroke}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseFill}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseCheckedStroke}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseCheckedFill}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphFill}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphStroke}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonForegroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBackgroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBorderBrushPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseStrokePointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseFillPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseCheckedStrokePointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseCheckedFillPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphFillPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphStrokePointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                EnableDependentAnimation="True"
                                                Storyboard.TargetName="CheckGlyph"
                                                Storyboard.TargetProperty="Width">
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlNormalAnimationDuration}"
                                                    Value="14" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                EnableDependentAnimation="True"
                                                Storyboard.TargetName="CheckGlyph"
                                                Storyboard.TargetProperty="Height">
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlNormalAnimationDuration}"
                                                    Value="14" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonForegroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBackgroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBorderBrushPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseStrokePressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseFillPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseCheckedStrokePressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseCheckedFillPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphFillPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphStrokePressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                EnableDependentAnimation="True"
                                                Storyboard.TargetName="CheckGlyph"
                                                Storyboard.TargetProperty="Width">
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlNormalAnimationDuration}"
                                                    Value="10" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                EnableDependentAnimation="True"
                                                Storyboard.TargetName="CheckGlyph"
                                                Storyboard.TargetProperty="Height">
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlNormalAnimationDuration}"
                                                    Value="10" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PressedCheckGlyph" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                EnableDependentAnimation="True"
                                                Storyboard.TargetName="PressedCheckGlyph"
                                                Storyboard.TargetProperty="Width">
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="10" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                EnableDependentAnimation="True"
                                                Storyboard.TargetName="PressedCheckGlyph"
                                                Storyboard.TargetProperty="Height">
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="10" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBackgroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBorderBrushDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseStrokeDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseFillDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseCheckedStrokeDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseCheckedFillDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphFillDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphStrokeDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                EnableDependentAnimation="True"
                                                Storyboard.TargetName="CheckGlyph"
                                                Storyboard.TargetProperty="Width">
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="14" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                EnableDependentAnimation="True"
                                                Storyboard.TargetName="CheckGlyph"
                                                Storyboard.TargetProperty="Height">
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="14" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">

                                    <VisualState x:Name="Checked">

                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="CheckGlyph"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="OuterEllipse"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="CheckOuterEllipse"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="PressedCheckGlyph"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphStrokeChecked}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedCheckGlyph" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonCheckGlyphFillPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <ScrollViewer>
        <Border Margin="{ThemeResource PageMarginWithBorder}">
            <StackPanel
                MaxWidth="1000"
                HorizontalAlignment="Stretch"
                Spacing="{StaticResource SettingsCardSpacing}">
                <StackPanel.ChildrenTransitions>
                    <EntranceThemeTransition FromVerticalOffset="50" />
                    <RepositionThemeTransition IsStaggeringEnabled="False" />
                </StackPanel.ChildrenTransitions>

                <TextBlock
                    x:Uid="Settings_AppearancePage_T1"
                    Style="{ThemeResource SettingsTitleSectionHeaderTextBlockStyle}"
                    Text="Theme" />

                <controls:SettingsCard
                    x:Uid="Settings_AppearancePage_Card1"
                    Description="Dark and light color themes, effective after restarting the app"
                    Header="Display Theme"
                    HeaderIcon="{xh:FontIcon Glyph=&#xe706;}">

                    <ComboBox ItemsSource="{xh:ComboBox ResourceKey=_Items1}" SelectedIndex="{Binding DisplayTheme, Mode=TwoWay}">
                        <i:Interaction.Behaviors>
                            <behaviors:SetComboBoxWidthFromItemsBehavior SetWidthFromItems="True" />
                            <behaviors:SettingsCardContentMaxWidthBehavior AscendentType="Grid" AutoMaxWidth="True" />
                        </i:Interaction.Behaviors>
                    </ComboBox>
                </controls:SettingsCard>

                <controls:SettingsExpander
                    x:Uid="Settings_AppearancePage_Card2"
                    Description="Theme colors for various controls, effective after restarting the app"
                    Header="Application Theme Color"
                    HeaderIcon="{xh:FontIcon Glyph=&#xE790;}">

                    <Button>
                        <Button.Background>
                            <SolidColorBrush Color="{Binding CurrentThemeColor}" />
                        </Button.Background>
                        <TextBlock Text="{Binding CurrentThemeColor, Converter={ThemeResource ColorHexCodeConverter}}" />
                    </Button>

                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard
                            x:Uid="Settings_AppearancePage_SubCard1"
                            Description="Adaptable to the system and available in varying shades of color"
                            Header="Use the system accent color">
                            <ToggleSwitch IsOn="{Binding UseSystemAccentColor, Mode=TwoWay}" />
                        </controls:SettingsCard>
                        <controls:SettingsCard
                            x:Uid="Settings_AppearancePage_SubCard2"
                            Description="All theme colors of varying shades will use this single color"
                            Header="Customize theme color"
                            IsEnabled="{Binding UseSystemAccentColor, Converter={ThemeResource InvertBoolConverter}}">
                            <StackPanel Orientation="Horizontal" Spacing="10">
                                <Button>
                                    <Button.Background>
                                        <SolidColorBrush Color="{Binding CustomThemeColor}" />
                                    </Button.Background>
                                    <TextBlock Text="{Binding CustomThemeColor, Converter={ThemeResource ColorHexCodeConverter}}" />
                                </Button>
                                <Button
                                    x:Uid="Settings_AppearancePage_ColorSelectorButton"
                                    Content="Color Selector"
                                    Style="{ThemeResource AccentButtonStyle}"
                                    Tag="themeColor">
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Loaded">
                                            <actions:ModifiedInvokeCommandAction Command="{Binding LoadedCommand}" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                    <Button.Flyout>
                                        <Flyout Placement="Full">
                                            <Flyout.FlyoutPresenterStyle>
                                                <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
                                                    <Setter Property="MaxHeight" Value="Infinity" />
                                                    <Setter Property="MaxWidth" Value="Infinity" />
                                                </Style>
                                            </Flyout.FlyoutPresenterStyle>
                                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <controls:ColorPicker Color="{Binding CustomThemeColor, Mode=TwoWay}" />
                                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                                    <Button
                                                        Command="{Binding SelectColorConfirmCommand}"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                                        Style="{ThemeResource AccentButtonStyle}"
                                                        Tag="themeColor">
                                                        <TextBlock x:Uid="Buttons_Confirm" Text="Confirm" />
                                                    </Button>
                                                </StackPanel>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>
                            </StackPanel>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

                <TextBlock
                    x:Uid="Settings_AppearancePage_T2"
                    Style="{ThemeResource SettingsSectionHeaderTextBlockStyle}"
                    Text="Background" />

                <controls:SettingsExpander IsEnabled="{Binding MicaIsSupported}">
                    <controls:SettingsExpander.Header>
                        <RadioButton
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            GroupName="Background"
                            Style="{ThemeResource RadioButtonStyle}">
                            <RadioButton.IsChecked>
                                <Binding Converter="{ThemeResource RadioButtonSelectedIndexConverter}" Path="BackgroundMode">
                                    <Binding.ConverterParameter>
                                        <x:Int32>0</x:Int32>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </RadioButton.IsChecked>
                            <StackPanel>
                                <TextBlock x:Uid="Settings_AppearancePage_H1" Text="Mica Background" />
                                <TextBlock
                                    x:Uid="Settings_AppearancePage_D1"
                                    Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="Mica is an opaque, dynamic material that incorporates theme and desktop wallpaper to paint the background of long-lived windows such as apps and settings." />
                                <TextBlock
                                    x:Uid="Settings_AppearancePage_Text1"
                                    Foreground="{ThemeResource SystemErrorTextColor}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="Unsupported System Version">
                                    <TextBlock.Visibility>
                                        <Binding Path="MicaIsSupported">
                                            <Binding.Converter>
                                                <converters:BoolToVisibilityConverter Inverted="True" />
                                            </Binding.Converter>
                                        </Binding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </StackPanel>

                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Checked">
                                    <actions:ModifiedInvokeCommandAction Command="{Binding RadioButtonCheckedCommand}">
                                        <actions:ModifiedInvokeCommandAction.CommandParameter>
                                            <x:Int32>0</x:Int32>
                                        </actions:ModifiedInvokeCommandAction.CommandParameter>
                                    </actions:ModifiedInvokeCommandAction>
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </RadioButton>
                    </controls:SettingsExpander.Header>
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard x:Uid="Settings_AppearancePage_SubCard3" Header="Mica Viausl Effect Kind">
                            <ComboBox SelectedIndex="{Binding MicaKind, Mode=TwoWay}">
                                <i:Interaction.Behaviors>
                                    <behaviors:SetComboBoxWidthFromItemsBehavior SetWidthFromItems="True" />
                                    <behaviors:SettingsCardContentMaxWidthBehavior AscendentType="Grid" AutoMaxWidth="True" />
                                </i:Interaction.Behaviors>
                                <x:String>Base</x:String>
                                <x:String>BaseAlt</x:String>
                            </ComboBox>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>
                <controls:SettingsCard IsEnabled="{Binding AcrylicIsSupported}">
                    <controls:SettingsCard.Header>
                        <RadioButton
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            GroupName="Background"
                            Style="{ThemeResource RadioButtonStyle}">
                            <RadioButton.IsChecked>
                                <Binding Converter="{ThemeResource RadioButtonSelectedIndexConverter}" Path="BackgroundMode">
                                    <Binding.ConverterParameter>
                                        <x:Int32>1</x:Int32>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </RadioButton.IsChecked>
                            <StackPanel>
                                <TextBlock x:Uid="Settings_AppearancePage_H2" Text="Acrylic Background" />
                                <TextBlock
                                    x:Uid="Settings_AppearancePage_D2"
                                    Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="Acrylic is a type of Brush that creates a translucent texture." />
                                <TextBlock
                                    x:Uid="Settings_AppearancePage_Text1"
                                    Foreground="{ThemeResource SystemErrorTextColor}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="Unsupported System Version">
                                    <TextBlock.Visibility>
                                        <Binding Path="AcrylicIsSupported">
                                            <Binding.Converter>
                                                <converters:BoolToVisibilityConverter Inverted="True" />
                                            </Binding.Converter>
                                        </Binding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </StackPanel>

                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Checked">
                                    <actions:ModifiedInvokeCommandAction Command="{Binding RadioButtonCheckedCommand}">
                                        <actions:ModifiedInvokeCommandAction.CommandParameter>
                                            <x:Int32>1</x:Int32>
                                        </actions:ModifiedInvokeCommandAction.CommandParameter>
                                    </actions:ModifiedInvokeCommandAction>
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </RadioButton>
                    </controls:SettingsCard.Header>
                </controls:SettingsCard>
                <controls:SettingsExpander>
                    <controls:SettingsExpander.Header>
                        <RadioButton
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            GroupName="Background"
                            Style="{ThemeResource RadioButtonStyle}">
                            <RadioButton.IsChecked>
                                <Binding Converter="{ThemeResource RadioButtonSelectedIndexConverter}" Path="BackgroundMode">
                                    <Binding.ConverterParameter>
                                        <x:Int32>2</x:Int32>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </RadioButton.IsChecked>
                            <StackPanel>
                                <TextBlock x:Uid="Settings_AppearancePage_H3" Text="Solid Color Background" />
                                <TextBlock
                                    x:Uid="Settings_AppearancePage_D3"
                                    Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="Background composed of a single color" />
                            </StackPanel>

                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Checked">
                                    <actions:ModifiedInvokeCommandAction Command="{Binding RadioButtonCheckedCommand}">
                                        <actions:ModifiedInvokeCommandAction.CommandParameter>
                                            <x:Int32>2</x:Int32>
                                        </actions:ModifiedInvokeCommandAction.CommandParameter>
                                    </actions:ModifiedInvokeCommandAction>
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </RadioButton>
                    </controls:SettingsExpander.Header>
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard
                            x:Uid="Settings_AppearancePage_SubCard4"
                            HorizontalContentAlignment="Left"
                            Header="Application background color">
                            <StackPanel Orientation="Horizontal" Spacing="10">
                                <GridView Margin="0,0,0,-15" SelectedIndex="{Binding SolidSelectedIndex, Mode=TwoWay}">
                                    <GridViewItem>
                                        <Border
                                            Width="64"
                                            Height="48"
                                            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                                            CornerRadius="4"
                                            ToolTipService.ToolTip="ApplicationPageBackgroundThemeBrush" />
                                    </GridViewItem>
                                    <GridViewItem>
                                        <Border
                                            Width="64"
                                            Height="48"
                                            CornerRadius="4"
                                            ToolTipService.ToolTip="Customize">
                                            <Border.Background>
                                                <SolidColorBrush Color="{Binding CustomBackgroundColor}" />
                                            </Border.Background>
                                        </Border>
                                    </GridViewItem>
                                </GridView>
                                <Button
                                    x:Uid="Settings_AppearancePage_ColorSelectorButton"
                                    Content="Color Selector"
                                    Style="{ThemeResource AccentButtonStyle}"
                                    Tag="backgroundColor">
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Loaded">
                                            <actions:ModifiedInvokeCommandAction Command="{Binding LoadedCommand}" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                    <Button.Flyout>
                                        <Flyout Placement="Full">
                                            <Flyout.FlyoutPresenterStyle>
                                                <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
                                                    <Setter Property="MaxHeight" Value="Infinity" />
                                                    <Setter Property="MaxWidth" Value="Infinity" />
                                                </Style>
                                            </Flyout.FlyoutPresenterStyle>
                                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <controls:ColorPicker Color="{Binding CustomBackgroundColor, Mode=TwoWay}" />
                                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                                    <Button
                                                        Command="{Binding SelectColorConfirmCommand}"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                                        Style="{ThemeResource AccentButtonStyle}"
                                                        Tag="backgroundColor">
                                                        <TextBlock x:Uid="Buttons_Confirm" Text="Confirm" />
                                                    </Button>
                                                </StackPanel>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>
                            </StackPanel>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>
                <controls:SettingsExpander>
                    <controls:SettingsExpander.Header>
                        <RadioButton
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            GroupName="Background"
                            Style="{ThemeResource RadioButtonStyle}">
                            <RadioButton.IsChecked>
                                <Binding Converter="{ThemeResource RadioButtonSelectedIndexConverter}" Path="BackgroundMode">
                                    <Binding.ConverterParameter>
                                        <x:Int32>3</x:Int32>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </RadioButton.IsChecked>
                            <StackPanel>
                                <TextBlock x:Uid="Settings_AppearancePage_H4" Text="Image Background" />
                                <TextBlock
                                    x:Uid="Settings_AppearancePage_D4"
                                    Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="Use an image as a background" />
                                <TextBlock
                                    x:Uid="Settings_AppearancePage_Text2"
                                    Foreground="{ThemeResource SystemErrorTextColor}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="File is not existed">
                                    <TextBlock.Visibility>
                                        <Binding Path="ImageFileExists">
                                            <Binding.Converter>
                                                <converters:BoolToVisibilityConverter Inverted="True" />
                                            </Binding.Converter>
                                        </Binding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </StackPanel>

                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Checked">
                                    <actions:ModifiedInvokeCommandAction Command="{Binding RadioButtonCheckedCommand}">
                                        <actions:ModifiedInvokeCommandAction.CommandParameter>
                                            <x:Int32>3</x:Int32>
                                        </actions:ModifiedInvokeCommandAction.CommandParameter>
                                    </actions:ModifiedInvokeCommandAction>
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </RadioButton>
                    </controls:SettingsExpander.Header>
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard x:Uid="Settings_AppearancePage_SubCard5" Header="Image File Path">
                            <AutoSuggestBox
                                Width="200"
                                QuerySubmitted="AutoSuggestBox_QuerySubmitted"
                                Text="{Binding ImageFilePath, Mode=TwoWay}">
                                <i:Interaction.Behaviors>
                                    <behaviors:SettingsCardContentMaxWidthBehavior AscendentType="Grid" AutoMaxWidth="True" />
                                </i:Interaction.Behaviors>

                                <AutoSuggestBox.QueryIcon>
                                    <FontIcon FontSize="14" Glyph="&#xED43;" />
                                </AutoSuggestBox.QueryIcon>
                            </AutoSuggestBox>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <TextBlock Style="{ThemeResource SettingsSectionHeaderTextBlockStyle}" Text="Details" />

                <controls:SettingsCard
                    Description="Reduce margins to increase content fill ratio"
                    Header="Narrow Margin Mode"
                    HeaderIcon="{xh:FontIcon Glyph=&#xf573;}">
                    <ToggleSwitch IsOn="{Binding UseNarrowMargin, Mode=TwoWay}" />
                </controls:SettingsCard>

            </StackPanel>
        </Border>
    </ScrollViewer>
</Page>
